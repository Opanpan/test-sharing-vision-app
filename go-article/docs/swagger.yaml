basePath: /
definitions:
  request.CreateArticleRequest:
    properties:
      category:
        minLength: 3
        type: string
      content:
        minLength: 200
        type: string
      status:
        enum:
        - publish
        - draft
        - thrash
        type: string
      title:
        minLength: 20
        type: string
    required:
    - category
    - content
    - status
    - title
    type: object
  request.UpdateArticleRequest:
    properties:
      category:
        minLength: 3
        type: string
      content:
        minLength: 200
        type: string
      status:
        enum:
        - publish
        - draft
        - thrash
        type: string
      title:
        minLength: 20
        type: string
    required:
    - category
    - content
    - status
    - title
    type: object
  response.ArticleResponse:
    properties:
      category:
        type: string
      content:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  response.ArticlesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/response.ArticleResponse'
        type: array
    type: object
  response.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  response.SuccessResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an API for managing articles
  title: Article Service API
  version: "1.0"
paths:
  /article:
    post:
      consumes:
      - application/json
      description: Create Article
      parameters:
      - description: Article
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateArticleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create Article
      tags:
      - Article
  /article/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete Article
      tags:
      - Article
    get:
      consumes:
      - application/json
      description: Get Article By Id
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ArticleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get Article By Id
      tags:
      - Article
    put:
      consumes:
      - application/json
      description: Update Article
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: Article
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update Article
      tags:
      - Article
  /articles/:limit/:offset:
    get:
      consumes:
      - application/json
      description: Get All Articles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ArticlesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get All Articles
      tags:
      - Article
swagger: "2.0"
